{
	"variables": [],
	"info": {
		"name": "08. Event Service",
		"_postman_id": "bafb9040-0c57-82e5-7f97-75c5977137e5",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1. Get Govern Events (Workflow Events) copy",
			"description": "",
			"item": [
				{
					"name": "Get ALL entitygovernevent",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitygovernevent\"\n        ]\n      }\n    }\n  }\n}"
						},
						"description": "Get all the entity govern events"
					},
					"response": []
				},
				{
					"name": "Get Workflow History of one Entity without sort",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"contexts\": [\n        {\n          \"self\": \"self/skuApr28001\",\n          \"workflow\": \"newProductSetup\"\n        }\n      ],\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitygovernevent\"\n        ],\n        \"excludeNonContextual\": true\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ],\n      \"relationships\": [\n        \"_ALL\"\n      ]\n    },\n    \"options\": {\n      \"totalRecords\": 100\n    }\n  }\n}"
						},
						"description": "Gets the Govern Events"
					},
					"response": []
				},
				{
					"name": "Get Workflow History of one Entity and one Activity",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"contexts\": [\n        {\n          \"self\": \"self/ozmzkb5wdhit\",\n          \"workflow\": \"newProductSetup\"\n        }\n      ],\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitygovernevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"activities/activityName\": {\n              \"eq\": \"New SKUs to Submit\"\n            }\n          }\n        ],\n        \"excludeNonContextual\": true\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ],\n      \"relationships\": [\n        \"_ALL\"\n      ]\n    },\n    \"options\": {\n      \"totalRecords\": 100\n    }\n  }\n}"
						},
						"description": "Gets the Govern Events"
					},
					"response": []
				},
				{
					"name": "Get Workflow History of one Entity without sort on startdatetime",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"contexts\": [\n        {\n          \"self\": \"self/may5et8\",\n          \"workflow\": \"newProductSetup\"\n        }\n      ],\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitygovernevent\"\n        ],\n        \"excludeNonContextual\": true\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ],\n      \"relationships\": [\n        \"_ALL\"\n      ]\n    },\n    \"sort\": {\n      \"attributes\": [\n        {\n          \"startDateTime\": \"_DESC\",\n          \"sortType\": \"_DATETIME\"\n        }\n      ]\n    },\n    \"options\": {\n      \"totalRecords\": 100\n    }\n  }\n}"
						},
						"description": "Gets the Govern Events"
					},
					"response": []
				},
				{
					"name": "Entity Govern get by giving workflow and step name Review Assortmentalong with business condition",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/entitygovernservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "x-rdp-version",
								"value": "8.1",
								"description": ""
							},
							{
								"key": "x-rdp-clientId",
								"value": "rdpclient",
								"description": ""
							},
							{
								"key": "x-rdp-tenantId",
								"value": "{{TENANT_ID}}",
								"description": ""
							},
							{
								"key": "x-rdp-ownershipData",
								"value": "Nike",
								"description": ""
							},
							{
								"key": "x-rdp-userId",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userName",
								"value": "Maryj",
								"description": ""
							},
							{
								"key": "x-rdp-firstName",
								"value": "Mary",
								"description": ""
							},
							{
								"key": "x-rdp-lastName",
								"value": "Jane",
								"description": ""
							},
							{
								"key": "x-rdp-userEmail",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userRoles",
								"value": "[\"buyer\"]",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"params\": {\r\n    \"query\": {\r\n     \r\n      \"filters\": {\r\n        \"typesCriterion\": [\r\n          \"sku\"\r\n        ]\r\n        }\r\n    },\r\n    \"fields\": {\r\n      \"activities/activityName\":{\r\n        \"eq\":\"New SKUs to Submit\",\r\n       \"contexts\": [\r\n        {\r\n          \"workflow\": \"newProductSetup\"\r\n        }\r\n      ]},\r\n      \r\n      \"businessConditions/businessConditionName\":{\r\n        \"eq\":\"buyerRequiredAttributesArePopulated_businessCondition\"\r\n      },\r\n      \r\n      \"businessConditions/businessConditionStatus\":{\r\n          \"eq\":\"true\"\r\n      },\r\n      \r\n      \"attributes\": [\r\n        \"_ALL\"\r\n      ],\r\n      \"relationships\": [\r\n        \"_ALL\"\r\n      ]\r\n    },\r\n    \"options\": {\r\n      \"totalRecords\": 1\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Business condition attributes info",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/entitygovernservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "x-rdp-version",
								"value": "8.1",
								"description": ""
							},
							{
								"key": "x-rdp-clientId",
								"value": "rdpclient",
								"description": ""
							},
							{
								"key": "x-rdp-tenantId",
								"value": "{{TENANT_ID}}",
								"description": ""
							},
							{
								"key": "x-rdp-ownershipData",
								"value": "Nike",
								"description": ""
							},
							{
								"key": "x-rdp-userId",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userName",
								"value": "Maryj",
								"description": ""
							},
							{
								"key": "x-rdp-firstName",
								"value": "Mary",
								"description": ""
							},
							{
								"key": "x-rdp-lastName",
								"value": "Jane",
								"description": ""
							},
							{
								"key": "x-rdp-userEmail",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userRoles",
								"value": "[\"buyer\"]",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"sku\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"businessConditions/businessConditionName\": {\n              \"eq\": \"buyerRequiredAttributesArePopulated_businessCondition\"\n            }\n          },\n          {\n            \"businessConditions/businessConditionStatus\": {\n              \"eq\": \"true\"\n            }\n          }\n        ]\n      }\n    },\n      \"fields\": {\n        \"attributes\": [\n          \"businessConditions\"\n        ],\n        \"relationships\": [\n          \"_ALL\"\n        ]\n      },\n    \"options\": {\n        \"totalRecords\": 1\n      }\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Business condition and Workflow attributes info",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/entitygovernservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "x-rdp-version",
								"value": "8.1",
								"description": ""
							},
							{
								"key": "x-rdp-clientId",
								"value": "rdpclient",
								"description": ""
							},
							{
								"key": "x-rdp-tenantId",
								"value": "{{TENANT_ID}}",
								"description": ""
							},
							{
								"key": "x-rdp-ownershipData",
								"value": "Nike",
								"description": ""
							},
							{
								"key": "x-rdp-userId",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userName",
								"value": "Maryj",
								"description": ""
							},
							{
								"key": "x-rdp-firstName",
								"value": "Mary",
								"description": ""
							},
							{
								"key": "x-rdp-lastName",
								"value": "Jane",
								"description": ""
							},
							{
								"key": "x-rdp-userEmail",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userRoles",
								"value": "[\"buyer\"]",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"contexts\": [\n        {\n          \"workflow\": \"newProductSetup\"\n        }\n      ],\n      \"filters\": {\n        \"typesCriterion\": [\n          \"sku\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"activities/activityName\": {\n              \"eq\": \"New SKUs to Submit\"\n            }\n          },\n          {\n            \"businessConditions/businessConditionName\": {\n              \"eq\": \"buyerRequiredAttributesArePopulated_businessCondition\"\n            }\n          },\n          {\n            \"businessConditions/businessConditionStatus\": {\n              \"eq\": \"false\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ],\n      \"relationships\": [\n        \"_ALL\"\n      ]\n    },\n    \"options\": {\n      \"totalRecords\": 1\n    }\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Business condition  Name and Workflow attributes info",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/entitygovernservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "x-rdp-version",
								"value": "8.1",
								"description": ""
							},
							{
								"key": "x-rdp-clientId",
								"value": "rdpclient",
								"description": ""
							},
							{
								"key": "x-rdp-tenantId",
								"value": "{{TENANT_ID}}",
								"description": ""
							},
							{
								"key": "x-rdp-ownershipData",
								"value": "Nike",
								"description": ""
							},
							{
								"key": "x-rdp-userId",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userName",
								"value": "Maryj",
								"description": ""
							},
							{
								"key": "x-rdp-firstName",
								"value": "Mary",
								"description": ""
							},
							{
								"key": "x-rdp-lastName",
								"value": "Jane",
								"description": ""
							},
							{
								"key": "x-rdp-userEmail",
								"value": "mary.jane@riversand.com",
								"description": ""
							},
							{
								"key": "x-rdp-userRoles",
								"value": "[\"buyer\"]",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"contexts\": [\n        {\n          \"workflow\": \"newProductSetup\"\n        }\n      ],\n      \"filters\": {\n        \"typesCriterion\": [\n          \"sku\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"activities/activityName\": {\n              \"eq\": \"New SKUs to Submit\"\n            }\n          },\n          {\n            \"businessConditions/businessConditionName\": {\n              \"eq\": \"buyerRequiredAttributesArePopulated_businessCondition\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ],\n      \"relationships\": [\n        \"_ALL\"\n      ]\n    },\n    \"options\": {\n      \"totalRecords\": 1\n    }\n  }\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Create External Events",
			"description": "",
			"item": [
				{
					"name": "1. create external event",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"sampleExcpected\",responseBody);",
									"",
									"var data =  postman.getEnvironmentVariable(\"sampleExcpected\"); ",
									"",
									"tests[\"Get external event by ID\"] = data.has(\"Entity has been submitted for create with entity Id : batch002. Please check back after 1 min\");",
									"",
									"console.log(data);",
									"",
									"postman.clearEnvironmentVariable(\"sampleExcpected\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/create",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": {\n    \"id\": \"batch002\",\n    \"name\": \"batch002\",\n    \"type\": \"externalevent\",\n    \"properties\": {\n      \"source\": \"internal\",\n      \"createdByService\": \"copservice\",\n      \"createdBy\": \"serviceuser\",\n      \"modifiedByService\": \"copservice\"\n    },\n    \"data\": {\n      \"attributes\": {\n        \"eventType\": {\n          \"values\": [\n            {\n              \"value\": \"rsconnect\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"eventSubType\": {\n          \"values\": [\n            {\n              \"value\": \"workBatchCompleted\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"profileType\": {\n          \"values\": [\n            {\n              \"value\": \"contentOnboarding\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"profileName\": {\n          \"values\": [\n            {\n              \"value\": \"Sku_Folder_Excel_Import_Transform\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"parentId\": {\n          \"values\": [\n            {\n              \"value\": \"253c61be-0391-4789-a328-589ad3de37de\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"batchId\": {\n          \"values\": [\n            {\n              \"value\": \"54e78a1d-92c8-41f2-84fd-d4f44b643a1f\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"message\": {\n          \"values\": [\n            {\n              \"value\": \"test message\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"userName\": {\n          \"values\": [\n            {\n              \"value\": \"system\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"fileName\": {\n          \"values\": [\n            {\n              \"value\": \"fileName.json\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"itemCount\": {\n          \"values\": [\n            {\n              \"value\": \"2\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2. Create external event BatchProcessingStarted",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/create",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": {\n    \"id\": \"121e1f13-743b-4040-b342-1e451c6d548d\",\n    \"name\": \"a9f95cc4-57ce-42fa-8e4e-a5fcfc553fc8\",\n    \"type\": \"externalevent\",\n    \"properties\": {\n      \"source\": \"internal\",\n      \"createdBy\": \"rsconnect\",\n      \"createdOn\": \"2017-05-02T17:50:03-0500\"\n    },\n    \"data\": {\n      \"attributes\": {\n        \"eventType\": {\n          \"values\": [\n            {\n              \"value\": \"rsconnect\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"eventSubType\": {\n          \"values\": [\n            {\n              \"value\": \"workBatchStarted\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"profileType\": {\n          \"values\": [\n            {\n              \"value\": \"ENTITY_IMPORT\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"profileName\": {\n          \"values\": [\n            {\n              \"value\": \"Sku_Folder_Excel_Import_Transform\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"parentId\": {\n          \"values\": [\n            {\n              \"value\": \"a9f95cc4-57ce-42fa-8e4e-a5fcfc553fc8\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"taskId\": {\n          \"values\": [\n            {\n              \"value\": \"021c4590-2579-4041-80a1-5ce5dd5c41f3\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"message\": {\n          \"values\": [\n            {\n              \"value\": \"test message\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"userId\": {\n          \"values\": [\n            {\n              \"value\": \"USERID-12345\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"fileType\": {\n          \"values\": [\n            {\n              \"value\": \"EXCEL\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"formatter\": {\n          \"values\": [\n            {\n              \"value\": \"EXCEL\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
						},
						"description": "Create an external event on job started"
					},
					"response": []
				},
				{
					"name": "3. Create Job Completed Simple event",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/create",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": {\n    \"id\": \"Nbatch003\",\n    \"name\": \"Nbatch003\",\n    \"type\": \"externalevent\",\n    \"properties\": {\n      \"source\": \"internal\",\n      \"createdByService\": \"copservice\",\n      \"createdBy\": \"serviceuser\",\n      \"modifiedByService\": \"copservice\"\n    },\n    \"data\": {\n      \"attributes\": {\n        \"eventType\": {\n          \"values\": [\n            {\n              \"value\": \"rsconnect\"\n            }\n          ]\n        },\n        \"eventSubType\": {\n          \"values\": [\n            {\n              \"value\": \"workAutomationcompleted\"\n            }\n          ]\n        },\n        \"creationdate\": {\n          \"values\": [\n            {\n              \"value\": \"2016-31-01\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"WorkAutomationID\": {\n          \"values\": [\n            {\n              \"value\": \"WA001\",\n              \"source\": \"internal\",\n              \"locale\": \"en-US\"\n            }\n          ]\n        },\n        \"fileName\": {\n          \"values\": [\n            {\n              \"value\": \"Importfile2.json\"\n            }\n          ]\n        },\n        \"fileid\": {\n          \"values\": [\n            {\n              \"value\": \"f2\"\n            }\n          ]\n        },\n        \"fileSize\": {\n          \"values\": [\n            {\n              \"value\": \"2024\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
						},
						"description": "Create an external even on job completed with single file name"
					},
					"response": []
				},
				{
					"name": "4. Create Job Completed Nested event",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/create",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"event\": {\r\n    \"id\": \"Nbatch001\",\r\n    \"name\": \"Nbatch001\",\r\n    \"type\": \"externalevent\",\r\n    \"properties\": {\r\n      \"source\": \"internal\",\r\n      \"createdByService\": \"copservice\",\r\n      \"createdBy\": \"serviceuser\",\r\n      \"modifiedByService\": \"copservice\"\r\n    },\r\n    \"data\": {\r\n      \"attributes\": {\r\n        \"eventType\": {\r\n          \"values\": [\r\n            {\r\n              \"value\": \"rsconnect\"\r\n            }\r\n          ]\r\n        },\r\n        \"eventSubType\": {\r\n          \"values\": [\r\n            {\r\n              \"value\": \"workAutomationcompleted\"\r\n            }\r\n          ]\r\n        },\r\n        \"creationdate\": {\r\n          \"values\": [\r\n            {\r\n              \"value\": \"2016-31-01\",\r\n              \"source\": \"internal\",\r\n              \"locale\": \"en-US\"\r\n            }\r\n          ]\r\n        },\r\n        \"WorkAutomationID\": {\r\n          \"values\": [\r\n            {\r\n              \"value\": \"WA001\",\r\n              \"source\": \"internal\",\r\n              \"locale\": \"en-US\"\r\n            }\r\n          ]\r\n        },\r\n        \"fileList\": {\r\n          \"group\": [{\r\n            \"fileName\": {\r\n              \"values\": [{\r\n                \"value\": \"f1.json\"\r\n              }]\r\n            },\r\n            \"fileid\": {\r\n              \"values\": [{\r\n                \"value\": \"f1\"\r\n              }]\r\n            },\r\n            \"fileSize\": {\r\n              \"values\": [{\r\n                \"value\": \"1024\"\r\n              }]\r\n            }\r\n          },\r\n            {\r\n              \"fileName\": {\r\n                \"values\": [{\r\n                  \"value\": \"f2.json\"\r\n                }]\r\n              },\r\n              \"fileid\": {\r\n                \"values\": [{\r\n                  \"value\": \"f2\"\r\n                }]\r\n              },\r\n              \"fileSize\": {\r\n                \"values\": [{\r\n                  \"value\": \"2024\"\r\n                }]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "create job completed event when there are multiple files in nested attribute"
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Get External Events",
			"description": "",
			"item": [
				{
					"name": "Get ALL External Events ",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ]\n      }\n    }\n  }\n}"
						},
						"description": "Get all the external events"
					},
					"response": []
				},
				{
					"name": "3.Get by FileName attribute",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"fileName\": {\n              \"eq\": \"Importfile2.json\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "4.Get by FileName Nested Attribute",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"fileList/fileName\": {\n              \"eq\": \"file1.json\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "get external events by specfying attribute criterion"
					},
					"response": []
				},
				{
					"name": "2. Get by Event Type",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventType\": {\n              \"eq\": \"rsconnectevent\"\n            }\n          }\n        ]\n      },\n      \"name\": \"WAID001\"\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "get external event on event type"
					},
					"response": []
				},
				{
					"name": "3.Get external event by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"sampleExcpected\",responseBody);",
									"",
									"var data =  postman.getEnvironmentVariable(\"sampleExcpected\"); ",
									"",
									"tests[\"Get external event by ID\"] = data.has(\"batch002\");",
									"",
									"console.log(data);",
									"",
									"postman.clearEnvironmentVariable(\"sampleExcpected\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"id\":\"121e1f13-743b-4040-b342-1e451c6d548d\",\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "4. Get external event by filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"sampleExcpected\",responseBody);",
									"",
									"var data =  postman.getEnvironmentVariable(\"sampleExcpected\"); ",
									"",
									"tests[\"Get external event by ID\"] = data.has(\"batch002\");",
									"",
									"console.log(data);",
									"",
									"postman.clearEnvironmentVariable(\"sampleExcpected\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventSubType\": {\n              \"eq\": \"workBatchStarted\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"eventSubType\"\n      ]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Get task details",
			"description": "",
			"item": [
				{
					"name": "1. Get by taskid",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"taskId\": {\n              \"exact\": \"801388bb-9197-42b3-a6f0-07f9cd4a594b\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    },\n    \"options\":{\n      \"maxRecords\":2000\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "2. Get by Event Type",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventType\": {\n              \"exact\": \"batchExtract\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "get external event on event type"
					},
					"response": []
				},
				{
					"name": "3. Get by Event Type and Event Sub Type",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventType\": {\n              \"exact\": \"batchExtract\"\n            }\n          },\n          {\n            \"eventSubType\": {\n              \"exact\": \"emitLoadCompleted\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "get external event on event type"
					},
					"response": []
				},
				{
					"name": "4. Get by taskid and task status",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"taskId\": {\n              \"exact\": \"b9268a28-b3a6-46bb-91ca-8051406190a7\"\n            }\n          },\n          {\n            \"taskStatus\": {\n              \"exact\": \"processing\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "5. Get by taskid, task status and userId",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"taskId\": {\n              \"exact\": \"b9268a28-b3a6-46bb-91ca-8051406190a7\"\n            }\n          },\n          {\n            \"taskStatus\": {\n              \"exact\": \"processing\"\n            }\n          },\n          {\n            \"userId\": {\n              \"exact\": \"mary.jane@riversand.com\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "6. Get by Event Type, Event Sub Type and taskId",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventType\": {\n              \"exact\": \"batchExtract\"\n            }\n          },\n          {\n            \"eventSubType\": {\n              \"exact\": \"emitLoadCompleted\"\n            }\n          },\n          {\n            \"taskId\": {\n              \"exact\": \"b9268a28-b3a6-46bb-91ca-8051406190a7\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ]\n    }\n  }\n}"
						},
						"description": "get external event on event type"
					},
					"response": []
				},
				{
					"name": "7. Get by Multiple Event Types using contains",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"eventType\": {\n              \"contains\": \"batchExtract recordLoad\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"_ALL\"]\n    }\n  }\n}"
						},
						"description": "get external event on event type"
					},
					"response": []
				},
				{
					"name": "8. Get by tasks where taskstatus is not \"queued\"",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"taskStatus\": {\n              \"exact\": \"queued\",\n              \"not\": true\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ]\n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				},
				{
					"name": "9. Get by taskid and eventtype",
					"request": {
						"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"externalevent\"\n        ],\n        \"attributesCriterion\": [\n          {\n            \"taskId\": {\n              \"exact\": \"8eff8d03-2a26-462f-9878-bc11e3103a4e\"\n            }\n          },\n          {\n            \"eventType\": {\n              \"exact\": \"BATCH_EXTRACT\"\n            }\n          }\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\"eventSubType\",\"recordCount\"]\n    },\n    \"options\":{\n      \"maxRecords\":2000\n    \n    }\n  }\n}"
						},
						"description": "Get external event by specifying file name"
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Get EntityManageEvent",
			"request": {
				"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitymanageevent\"\n        ]\n      }\n    }\n  }\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Govern History for Attribute Validations",
			"request": {
				"url": "http://{{WEBURL}}:{{WEBPORT}}/{{TENANT_ID}}/api/eventservice/get",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"params\": {\n    \"query\": {\n      \"filters\": {\n        \"typesCriterion\": [\n          \"entitygovernevent\"\n        ]\n      }\n    },\n    \"fields\": {\n      \"attributes\": [\n        \"_ALL\"\n      ]\n    },\n    \"options\": {\n      \"maxRecords\": 1\n    }\n  }\n}"
				},
				"description": "Get Govern History for Attribute Validations"
			},
			"response": []
		}
	]
}